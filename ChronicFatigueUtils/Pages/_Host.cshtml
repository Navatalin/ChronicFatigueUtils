@page "/"
@namespace ChronicFatigueUtils.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ChronicFatigueUtils</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="ChronicFatigueUtils.styles.css" rel="stylesheet" />
</head>
<body>
    <component type="typeof(App)" render-mode="Server" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
    <script>
        window.localDate = () => {
            var ldCurrentDate = new Date();
            return ldCurrentDate.getFullYear() +
                "-" + String(ldCurrentDate.getMonth() + 1).padStart(2, '0') +
                "-" + String(ldCurrentDate.getDate()).padStart(2, '0') +
                "T" +
                String(ldCurrentDate.getHours()).padStart(2, '0') +
                ":" + String(ldCurrentDate.getMinutes()).padStart(2, '0') +
                ":" + String(ldCurrentDate.getSeconds()).padStart(2, '0');
        };
        window.utcDate = () => {
            var ldCurrentDate = new Date();
            return ldCurrentDate.getUTCFullYear() +
                "-" + String(ldCurrentDate.getUTCMonth() + 1).padStart(2, '0') +
                "-" + String(ldCurrentDate.getUTCDate()).padStart(2, '0') +
                "T" +
                String(ldCurrentDate.getUTCHours()).padStart(2, '0') +
                ":" + String(ldCurrentDate.getUTCMinutes()).padStart(2, '0') +
                ":" + String(ldCurrentDate.getUTCSeconds()).padStart(2, '0');
        };
        window.timeZoneOffset = () => {
            return new Date().getTimezoneOffset() / 60;
        };
    </script>
</body>
</html>
